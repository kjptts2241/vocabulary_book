// Generated by view binder compiler. Do not edit!
package com.example.vocabulary_book.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.vocabulary_book.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DangoAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button dangoAddButton;

  @NonNull
  public final Button dangoAddCancelButton;

  @NonNull
  public final EditText dangoExplanation;

  @NonNull
  public final EditText dangoKorea;

  @NonNull
  public final EditText dangoPronunciation;

  @NonNull
  public final EditText dangoStudy;

  private DangoAddBinding(@NonNull ConstraintLayout rootView, @NonNull Button dangoAddButton,
      @NonNull Button dangoAddCancelButton, @NonNull EditText dangoExplanation,
      @NonNull EditText dangoKorea, @NonNull EditText dangoPronunciation,
      @NonNull EditText dangoStudy) {
    this.rootView = rootView;
    this.dangoAddButton = dangoAddButton;
    this.dangoAddCancelButton = dangoAddCancelButton;
    this.dangoExplanation = dangoExplanation;
    this.dangoKorea = dangoKorea;
    this.dangoPronunciation = dangoPronunciation;
    this.dangoStudy = dangoStudy;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DangoAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DangoAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dango_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DangoAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dango_add_button;
      Button dangoAddButton = ViewBindings.findChildViewById(rootView, id);
      if (dangoAddButton == null) {
        break missingId;
      }

      id = R.id.dango_add_cancel_button;
      Button dangoAddCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (dangoAddCancelButton == null) {
        break missingId;
      }

      id = R.id.dango_explanation;
      EditText dangoExplanation = ViewBindings.findChildViewById(rootView, id);
      if (dangoExplanation == null) {
        break missingId;
      }

      id = R.id.dango_korea;
      EditText dangoKorea = ViewBindings.findChildViewById(rootView, id);
      if (dangoKorea == null) {
        break missingId;
      }

      id = R.id.dango_pronunciation;
      EditText dangoPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (dangoPronunciation == null) {
        break missingId;
      }

      id = R.id.dango_study;
      EditText dangoStudy = ViewBindings.findChildViewById(rootView, id);
      if (dangoStudy == null) {
        break missingId;
      }

      return new DangoAddBinding((ConstraintLayout) rootView, dangoAddButton, dangoAddCancelButton,
          dangoExplanation, dangoKorea, dangoPronunciation, dangoStudy);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
